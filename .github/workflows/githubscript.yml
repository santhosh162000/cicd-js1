name: Release using custom script

on:
  workflow_dispatch

jobs:
  determine_version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Determine version
        uses: oprypin/find-latest-tag@v1
        with:
          repository: santhosh162000/cicd-js1  # The repository to scan.
          releases-only: true  # We know that all relevant tags have a GitHub release for them.
        id: javascript1  # The step ID to refer to later.  

      - name: Get Latest Commit Message
        id: latest_commit_message
        run: |
          echo "::set-output name=commit_message::$(git log --format=%B -n 1)"  

      - name: Bump Version
        id: determine_version
        run: |
          COMMIT_MESSAGE=${{ steps.latest_commit_message.outputs.commit_message }}
          CURRENT_VERSION=${{ steps.javascript1.outputs.tag }}

          MAJOR=$(echo $CURRENT_VERSION | cut -d '.' -f 1)
          MINOR=$(echo $CURRENT_VERSION | cut -d '.' -f 2)
          PATCH=$(echo $CURRENT_VERSION | cut -d '.' -f 3)

          if [[ $COMMIT_MESSAGE == *"[major]"* ]]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [[ $COMMIT_MESSAGE == *"[minor]"* ]]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          else
            PATCH=$((PATCH + 1))
          fi

          NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
          echo "::set-output name=new_version::$NEW_VERSION"

  create_release:
    needs: determine_version
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.determine_version.outputs.new_version }}
          release_name: Release v${{ needs.determine_version.outputs.new_version }}
          body: |
            Add release notes or description here
          draft: false
          prerelease: false
